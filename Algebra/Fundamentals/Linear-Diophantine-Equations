#code 
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

ll gcd_extended(ll a, ll b, ll &x, ll &y) {
    if (b == 0) {
        x = 1; y = 0;
        return a;
    }
    ll x1, y1;
    ll d = gcd_extended(b, a % b, x1, y1);
    x = y1;
    y = x1 - y1 * (a / b);
    return d;
}

ll count_solutions(ll a, ll b, ll c) {
    ll x, y;
    ll d = gcd_extended(a, b, x, y);
    if (c % d != 0) return 0;

    x *= c / d;
    y *= c / d;

    // General solution: x = x + (b/d)*t, y = y - (a/d)*t
    ll k1 = ceil(-1.0 * x * d / b);
    ll k2 = floor(1.0 * y * d / a);

    if (k1 > k2) return 0;
    return k2 - k1 + 1;
}

int main() {
    int T;
    cin >> T;
    for (int t = 1; t <= T; ++t) {
        ll A, B, C, P;
        cin >> A >> B >> C >> P;

        ll ways = 0;
        for (ll z = 0; z * C <= P; ++z) {
            ll remaining = P - z * C;
            ways += count_solutions(A, B, remaining);
        }

        cout << "Case " << t << ": " << ways << '\n';
    }
    return 0;
}
